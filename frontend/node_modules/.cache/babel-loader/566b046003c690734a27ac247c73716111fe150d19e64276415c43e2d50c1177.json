{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonathan\\\\Desktop\\\\Proyecto Hostal\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Importar useNavigate\nimport RoomList from '../components/RoomList';\nimport roomsData from '../data/roomsData';\nimport DatePicker, { registerLocale } from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport es from 'date-fns/locale/es';\nimport '../styles/Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nregisterLocale(\"es\", es);\nconst Home = () => {\n  _s();\n  const navigate = useNavigate();\n\n  // Configurar fechas iniciales\n  const today = new Date();\n  const tomorrow = new Date(today.getTime() + 24 * 60 * 60 * 1000);\n  const [checkIn, setCheckIn] = useState(today); // Fecha de ingreso\n  const [checkOut, setCheckOut] = useState(tomorrow); // Fecha de salida\n  const [availability, setAvailability] = useState({});\n  const sortedRoomsData = [...roomsData].sort((a, b) => a.id - b.id);\n\n  // Función para verificar disponibilidad en el backend\n  const fetchAvailability = async () => {\n    if (!checkIn || !checkOut) return;\n    const formattedCheckIn = checkIn.toISOString().split(\"T\")[0];\n    const formattedCheckOut = checkOut.toISOString().split(\"T\")[0];\n    try {\n      const response = await fetch(\"http://localhost:5000/api/reservations/check-availability\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          checkIn: formattedCheckIn,\n          checkOut: formattedCheckOut\n        })\n      });\n      const data = await response.json();\n      const updatedAvailability = sortedRoomsData.reduce((acc, room) => {\n        var _data$unavailableRoom;\n        acc[room.id] = !((_data$unavailableRoom = data.unavailableRooms) !== null && _data$unavailableRoom !== void 0 && _data$unavailableRoom.includes(room.id));\n        return acc;\n      }, {});\n      setAvailability(updatedAvailability);\n    } catch (error) {\n      console.error(\"Error al verificar disponibilidad:\", error);\n    }\n  };\n\n  // Actualizar disponibilidad al cambiar fechas\n  useEffect(() => {\n    fetchAvailability();\n  }, [checkIn, checkOut]);\n\n  // Manejar la selección de fecha de ingreso\n  const handleCheckInChange = date => {\n    setCheckIn(date);\n\n    // Sincronizar automáticamente la fecha de salida sumando un día\n    const nextDay = new Date(date.getTime() + 24 * 60 * 60 * 1000);\n    setCheckOut(nextDay); // Actualizar la fecha de salida\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"home-title\",\n      children: \"Bienvenido al Hostal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-admin-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Selecciona tu fecha de ingreso:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"datepicker-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(DatePicker, {\n            selected: checkIn,\n            onChange: handleCheckInChange,\n            locale: \"es\",\n            placeholderText: \"Fecha de ingreso\",\n            minDate: new Date(),\n            dateFormat: \"dd/MM/yyyy\",\n            className: \"datepicker-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Fecha de salida:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"datepicker-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(DatePicker, {\n            selected: checkOut,\n            onChange: date => setCheckOut(date),\n            locale: \"es\",\n            placeholderText: \"Fecha de salida\",\n            minDate: new Date(checkIn.getTime() + 24 * 60 * 60 * 1000) // Un día después de la fecha de ingreso\n            ,\n            dateFormat: \"dd/MM/yyyy\",\n            className: \"datepicker-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RoomList, {\n      rooms: sortedRoomsData,\n      availability: availability\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/admin'),\n        className: \"admin-button\",\n        children: \"Administrador\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"D7VeEqUhOFgC4rQZzd55+quFOSc=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","RoomList","roomsData","DatePicker","registerLocale","es","jsxDEV","_jsxDEV","Home","_s","navigate","today","Date","tomorrow","getTime","checkIn","setCheckIn","checkOut","setCheckOut","availability","setAvailability","sortedRoomsData","sort","a","b","id","fetchAvailability","formattedCheckIn","toISOString","split","formattedCheckOut","response","fetch","method","headers","body","JSON","stringify","data","json","updatedAvailability","reduce","acc","room","_data$unavailableRoom","unavailableRooms","includes","error","console","handleCheckInChange","date","nextDay","className","children","fileName","_jsxFileName","lineNumber","columnNumber","selected","onChange","locale","placeholderText","minDate","dateFormat","rooms","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Jonathan/Desktop/Proyecto Hostal/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // Importar useNavigate\r\nimport RoomList from '../components/RoomList';\r\nimport roomsData from '../data/roomsData';\r\nimport DatePicker, { registerLocale } from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport es from 'date-fns/locale/es';\r\nimport '../styles/Home.css';\r\n\r\nregisterLocale(\"es\", es);\r\n\r\nconst Home = () => {\r\n    const navigate = useNavigate();\r\n\r\n    // Configurar fechas iniciales\r\n    const today = new Date();\r\n    const tomorrow = new Date(today.getTime() + 24 * 60 * 60 * 1000);\r\n\r\n    const [checkIn, setCheckIn] = useState(today); // Fecha de ingreso\r\n    const [checkOut, setCheckOut] = useState(tomorrow); // Fecha de salida\r\n    const [availability, setAvailability] = useState({});\r\n\r\n    const sortedRoomsData = [...roomsData].sort((a, b) => a.id - b.id);\r\n\r\n    // Función para verificar disponibilidad en el backend\r\n    const fetchAvailability = async () => {\r\n        if (!checkIn || !checkOut) return;\r\n        const formattedCheckIn = checkIn.toISOString().split(\"T\")[0];\r\n        const formattedCheckOut = checkOut.toISOString().split(\"T\")[0];\r\n\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/api/reservations/check-availability\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({\r\n                    checkIn: formattedCheckIn,\r\n                    checkOut: formattedCheckOut,\r\n                }),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            const updatedAvailability = sortedRoomsData.reduce((acc, room) => {\r\n                acc[room.id] = !data.unavailableRooms?.includes(room.id);\r\n                return acc;\r\n            }, {});\r\n\r\n            setAvailability(updatedAvailability);\r\n        } catch (error) {\r\n            console.error(\"Error al verificar disponibilidad:\", error);\r\n        }\r\n    };\r\n\r\n    // Actualizar disponibilidad al cambiar fechas\r\n    useEffect(() => {\r\n        fetchAvailability();\r\n    }, [checkIn, checkOut]);\r\n\r\n    // Manejar la selección de fecha de ingreso\r\n    const handleCheckInChange = (date) => {\r\n        setCheckIn(date);\r\n\r\n        // Sincronizar automáticamente la fecha de salida sumando un día\r\n        const nextDay = new Date(date.getTime() + 24 * 60 * 60 * 1000);\r\n        setCheckOut(nextDay); // Actualizar la fecha de salida\r\n    };\r\n\r\n    return (\r\n        <div className=\"home-container\">\r\n            <h1 className=\"home-title\">Bienvenido al Hostal</h1>\r\n\r\n            {/* Calendario para seleccionar rango de fechas */}\r\n            <div className=\"calendar-admin-container\">\r\n                {/* Calendario de Ingreso */}\r\n                <div className=\"calendar-container\">\r\n                    <label>Selecciona tu fecha de ingreso:</label>\r\n                    <div className=\"datepicker-wrapper\">\r\n                        <DatePicker\r\n                            selected={checkIn}\r\n                            onChange={handleCheckInChange}\r\n                            locale=\"es\"\r\n                            placeholderText=\"Fecha de ingreso\"\r\n                            minDate={new Date()}\r\n                            dateFormat=\"dd/MM/yyyy\"\r\n                            className=\"datepicker-input\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Calendario de Salida */}\r\n                <div className=\"calendar-container\">\r\n                    <label>Fecha de salida:</label>\r\n                    <div className=\"datepicker-wrapper\">\r\n                        <DatePicker\r\n                            selected={checkOut}\r\n                            onChange={(date) => setCheckOut(date)}\r\n                            locale=\"es\"\r\n                            placeholderText=\"Fecha de salida\"\r\n                            minDate={new Date(checkIn.getTime() + 24 * 60 * 60 * 1000)} // Un día después de la fecha de ingreso\r\n                            dateFormat=\"dd/MM/yyyy\"\r\n                            className=\"datepicker-input\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Lista de habitaciones */}\r\n            <RoomList rooms={sortedRoomsData} availability={availability} />\r\n\r\n            {/* Botón Administrador */}\r\n            <div className=\"admin-button-container\">\r\n                <button\r\n                    onClick={() => navigate('/admin')}\r\n                    className=\"admin-button\"\r\n                >\r\n                    Administrador\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}