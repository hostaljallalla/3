{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonathan\\\\Desktop\\\\Proyecto Hostal\\\\frontend\\\\src\\\\PaypalButton.js\";\nimport React from \"react\";\nimport { PayPalButtons } from \"@paypal/react-paypal-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaypalButton = () => {\n  return /*#__PURE__*/_jsxDEV(PayPalButtons, {\n    createOrder: (data, actions) => {\n      return actions.order.create({\n        purchase_units: [{\n          amount: {\n            value: \"10.00\" // Monto del pago\n          }\n        }]\n      });\n    },\n    onApprove: (data, actions) => {\n      return actions.order.capture().then(details => {\n        console.log(\"Pago exitoso:\", details);\n        alert(\"Transacción completada por \" + details.payer.name.given_name);\n        // Aquí puedes manejar la lógica de éxito: actualizar base de datos, redirigir al usuario, etc.\n      }).catch(error => {\n        console.error(\"Error al capturar el pago:\", error);\n        alert(\"Ocurrió un error al procesar el pago.\");\n      });\n    },\n    onError: err => {\n      console.error(\"Error en el proceso de pago:\", err);\n      alert(\"Hubo un error al procesar tu pago. Intenta nuevamente.\");\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = PaypalButton;\nexport default PaypalButton;\nvar _c;\n$RefreshReg$(_c, \"PaypalButton\");","map":{"version":3,"names":["React","PayPalButtons","jsxDEV","_jsxDEV","PaypalButton","createOrder","data","actions","order","create","purchase_units","amount","value","onApprove","capture","then","details","console","log","alert","payer","name","given_name","catch","error","onError","err","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Jonathan/Desktop/Proyecto Hostal/frontend/src/PaypalButton.js"],"sourcesContent":["import React from \"react\";\r\nimport { PayPalButtons } from \"@paypal/react-paypal-js\";\r\n\r\nconst PaypalButton = () => {\r\n  return (\r\n    <PayPalButtons\r\n      createOrder={(data, actions) => {\r\n        return actions.order.create({\r\n          purchase_units: [\r\n            {\r\n              amount: {\r\n                value: \"10.00\", // Monto del pago\r\n              },\r\n            },\r\n          ],\r\n        });\r\n      }}\r\n      onApprove={(data, actions) => {\r\n        return actions.order.capture().then((details) => {\r\n          console.log(\"Pago exitoso:\", details);\r\n          alert(\"Transacción completada por \" + details.payer.name.given_name);\r\n          // Aquí puedes manejar la lógica de éxito: actualizar base de datos, redirigir al usuario, etc.\r\n        }).catch((error) => {\r\n          console.error(\"Error al capturar el pago:\", error);\r\n          alert(\"Ocurrió un error al procesar el pago.\");\r\n        });\r\n      }}\r\n      onError={(err) => {\r\n        console.error(\"Error en el proceso de pago:\", err);\r\n        alert(\"Hubo un error al procesar tu pago. Intenta nuevamente.\");\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PaypalButton;\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACzB,oBACED,OAAA,CAACF,aAAa;IACZI,WAAW,EAAEA,CAACC,IAAI,EAAEC,OAAO,KAAK;MAC9B,OAAOA,OAAO,CAACC,KAAK,CAACC,MAAM,CAAC;QAC1BC,cAAc,EAAE,CACd;UACEC,MAAM,EAAE;YACNC,KAAK,EAAE,OAAO,CAAE;UAClB;QACF,CAAC;MAEL,CAAC,CAAC;IACJ,CAAE;IACFC,SAAS,EAAEA,CAACP,IAAI,EAAEC,OAAO,KAAK;MAC5B,OAAOA,OAAO,CAACC,KAAK,CAACM,OAAO,CAAC,CAAC,CAACC,IAAI,CAAEC,OAAO,IAAK;QAC/CC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,OAAO,CAAC;QACrCG,KAAK,CAAC,6BAA6B,GAAGH,OAAO,CAACI,KAAK,CAACC,IAAI,CAACC,UAAU,CAAC;QACpE;MACF,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK;QAClBP,OAAO,CAACO,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClDL,KAAK,CAAC,uCAAuC,CAAC;MAChD,CAAC,CAAC;IACJ,CAAE;IACFM,OAAO,EAAGC,GAAG,IAAK;MAChBT,OAAO,CAACO,KAAK,CAAC,8BAA8B,EAAEE,GAAG,CAAC;MAClDP,KAAK,CAAC,wDAAwD,CAAC;IACjE;EAAE;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN,CAAC;AAACC,EAAA,GA9BI3B,YAAY;AAgClB,eAAeA,YAAY;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}