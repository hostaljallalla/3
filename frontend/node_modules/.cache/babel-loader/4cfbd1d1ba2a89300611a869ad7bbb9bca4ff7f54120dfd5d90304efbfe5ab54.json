{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonathan\\\\Desktop\\\\Proyecto Hostal\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport RoomList from '../components/RoomList';\nimport roomsData from '../data/roomsData';\nimport DatePicker, { registerLocale } from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport es from 'date-fns/locale/es';\nimport '../styles/Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nregisterLocale(\"es\", es);\nconst Home = () => {\n  _s();\n  const navigate = useNavigate();\n\n  // Configurar fechas iniciales\n  const today = new Date();\n  const tomorrow = new Date(today.getTime() + 24 * 60 * 60 * 1000);\n  const [checkIn, setCheckIn] = useState(today);\n  const [checkOut, setCheckOut] = useState(tomorrow);\n  const [availability, setAvailability] = useState({}); // Estado de disponibilidad\n\n  const sortedRoomsData = [...roomsData].sort((a, b) => a.id - b.id);\n\n  // Inicializar disponibilidad con todas las habitaciones como disponibles\n  useEffect(() => {\n    const initialAvailability = {};\n    sortedRoomsData.forEach(room => {\n      initialAvailability[room.id] = true; // Por defecto, todas las habitaciones disponibles\n    });\n    setAvailability(initialAvailability);\n  }, []);\n\n  // Función para ajustar automáticamente la fecha de salida\n  const handleCheckInChange = date => {\n    setCheckIn(date);\n    const nextDay = new Date(date.getTime() + 24 * 60 * 60 * 1000);\n    setCheckOut(nextDay);\n  };\n\n  // Función para verificar disponibilidad en el backend\n  const fetchAvailability = async () => {\n    if (!checkIn || !checkOut) return;\n    const formattedCheckIn = checkIn.toISOString().split(\"T\")[0];\n    const formattedCheckOut = checkOut.toISOString().split(\"T\")[0];\n    try {\n      var _data$unavailableRoom;\n      const response = await fetch(\"http://localhost:5000/api/reservations/check-availability\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          checkIn: formattedCheckIn,\n          checkOut: formattedCheckOut\n        })\n      });\n      const data = await response.json();\n      const unavailableRoomIds = ((_data$unavailableRoom = data.unavailableRooms) === null || _data$unavailableRoom === void 0 ? void 0 : _data$unavailableRoom.map(id => Number(id))) || [];\n      const updatedAvailability = {};\n      sortedRoomsData.forEach(room => {\n        updatedAvailability[room.id] = !unavailableRoomIds.includes(room.id);\n      });\n      setAvailability(updatedAvailability);\n    } catch (error) {\n      console.error(\"Error al verificar disponibilidad:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchAvailability();\n  }, [checkIn, checkOut]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"home-title\",\n      children: \"Bienvenido al Hostal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Fecha de ingreso:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: checkIn,\n        onChange: handleCheckInChange,\n        locale: \"es\",\n        minDate: today,\n        dateFormat: \"dd/MM/yyyy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Fecha de salida:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: checkOut,\n        onChange: date => {\n          if (date > checkIn) setCheckOut(date);\n        },\n        locale: \"es\",\n        minDate: new Date(checkIn.getTime() + 24 * 60 * 60 * 1000),\n        dateFormat: \"dd/MM/yyyy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/admin'),\n        className: \"admin-button\",\n        children: \"Administrador\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RoomList, {\n      rooms: sortedRoomsData,\n      availability: availability\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"ZiktUwmuA23MOxIpXF+GhueTLa4=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","RoomList","roomsData","DatePicker","registerLocale","es","jsxDEV","_jsxDEV","Home","_s","navigate","today","Date","tomorrow","getTime","checkIn","setCheckIn","checkOut","setCheckOut","availability","setAvailability","sortedRoomsData","sort","a","b","id","initialAvailability","forEach","room","handleCheckInChange","date","nextDay","fetchAvailability","formattedCheckIn","toISOString","split","formattedCheckOut","_data$unavailableRoom","response","fetch","method","headers","body","JSON","stringify","data","json","unavailableRoomIds","unavailableRooms","map","Number","updatedAvailability","includes","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","selected","onChange","locale","minDate","dateFormat","onClick","rooms","_c","$RefreshReg$"],"sources":["C:/Users/Jonathan/Desktop/Proyecto Hostal/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport RoomList from '../components/RoomList';\r\nimport roomsData from '../data/roomsData';\r\nimport DatePicker, { registerLocale } from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport es from 'date-fns/locale/es';\r\nimport '../styles/Home.css';\r\n\r\nregisterLocale(\"es\", es);\r\n\r\nconst Home = () => {\r\n    const navigate = useNavigate();\r\n\r\n    // Configurar fechas iniciales\r\n    const today = new Date();\r\n    const tomorrow = new Date(today.getTime() + 24 * 60 * 60 * 1000);\r\n\r\n    const [checkIn, setCheckIn] = useState(today);\r\n    const [checkOut, setCheckOut] = useState(tomorrow);\r\n    const [availability, setAvailability] = useState({}); // Estado de disponibilidad\r\n\r\n    const sortedRoomsData = [...roomsData].sort((a, b) => a.id - b.id);\r\n\r\n    // Inicializar disponibilidad con todas las habitaciones como disponibles\r\n    useEffect(() => {\r\n        const initialAvailability = {};\r\n        sortedRoomsData.forEach((room) => {\r\n            initialAvailability[room.id] = true; // Por defecto, todas las habitaciones disponibles\r\n        });\r\n        setAvailability(initialAvailability);\r\n    }, []);\r\n\r\n    // Función para ajustar automáticamente la fecha de salida\r\n    const handleCheckInChange = (date) => {\r\n        setCheckIn(date);\r\n        const nextDay = new Date(date.getTime() + 24 * 60 * 60 * 1000);\r\n        setCheckOut(nextDay);\r\n    };\r\n\r\n    // Función para verificar disponibilidad en el backend\r\n    const fetchAvailability = async () => {\r\n        if (!checkIn || !checkOut) return;\r\n\r\n        const formattedCheckIn = checkIn.toISOString().split(\"T\")[0];\r\n        const formattedCheckOut = checkOut.toISOString().split(\"T\")[0];\r\n\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/api/reservations/check-availability\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({\r\n                    checkIn: formattedCheckIn,\r\n                    checkOut: formattedCheckOut,\r\n                }),\r\n            });\r\n\r\n            const data = await response.json();\r\n            const unavailableRoomIds = data.unavailableRooms?.map((id) => Number(id)) || [];\r\n\r\n            const updatedAvailability = {};\r\n            sortedRoomsData.forEach((room) => {\r\n                updatedAvailability[room.id] = !unavailableRoomIds.includes(room.id);\r\n            });\r\n\r\n            setAvailability(updatedAvailability);\r\n        } catch (error) {\r\n            console.error(\"Error al verificar disponibilidad:\", error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchAvailability();\r\n    }, [checkIn, checkOut]);\r\n\r\n    return (\r\n        <div className=\"home-container\">\r\n            <h1 className=\"home-title\">Bienvenido al Hostal</h1>\r\n\r\n            {/* Contenedor de calendarios */}\r\n            <div className=\"calendar-container\">\r\n                <label>Fecha de ingreso:</label>\r\n                <DatePicker\r\n                    selected={checkIn}\r\n                    onChange={handleCheckInChange}\r\n                    locale=\"es\"\r\n                    minDate={today}\r\n                    dateFormat=\"dd/MM/yyyy\"\r\n                />\r\n\r\n                <label>Fecha de salida:</label>\r\n                <DatePicker\r\n                    selected={checkOut}\r\n                    onChange={(date) => {\r\n                        if (date > checkIn) setCheckOut(date);\r\n                    }}\r\n                    locale=\"es\"\r\n                    minDate={new Date(checkIn.getTime() + 24 * 60 * 60 * 1000)}\r\n                    dateFormat=\"dd/MM/yyyy\"\r\n                />\r\n            </div>\r\n\r\n            {/* Botón Administrador */}\r\n            <div className=\"admin-button-container\">\r\n                <button onClick={() => navigate('/admin')} className=\"admin-button\">\r\n                    Administrador\r\n                </button>\r\n            </div>\r\n\r\n            {/* Lista de habitaciones */}\r\n            <RoomList rooms={sortedRoomsData} availability={availability} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}