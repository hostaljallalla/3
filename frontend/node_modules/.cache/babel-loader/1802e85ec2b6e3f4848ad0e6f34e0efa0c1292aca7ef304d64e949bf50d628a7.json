{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonathan\\\\Desktop\\\\Proyecto Hostal\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport RoomCard from '../components/RoomCard';\nimport roomsData from '../data/roomsData';\nimport DatePicker, { registerLocale } from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport es from 'date-fns/locale/es';\nimport '../styles/Home.css';\nimport Footer from '../components/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nregisterLocale(\"es\", es);\nconst Home = () => {\n  _s();\n  const today = new Date();\n  const tomorrow = new Date(today.getTime() + 24 * 60 * 60 * 1000);\n  const [checkIn, setCheckIn] = useState(today);\n  const [checkOut, setCheckOut] = useState(tomorrow);\n  const [availability, setAvailability] = useState({});\n  const [selectedOptions, setSelectedOptions] = useState(roomsData.reduce((acc, room) => ({\n    ...acc,\n    [room.id]: 1\n  }), {}));\n  const sortedRoomsData = [...roomsData].sort((a, b) => a.id - b.id);\n\n  // Calcular disponibilidad para todas las habitaciones\n  const calculateAvailability = async () => {\n    const updatedAvailability = {};\n    for (const room of sortedRoomsData) {\n      try {\n        const response = await fetch(\"https://hostaljallalla2.onrender.com/api/reservations/check-availability\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            roomId: room.id,\n            checkIn: checkIn.toISOString().split(\"T\")[0],\n            checkOut: checkOut.toISOString().split(\"T\")[0]\n          })\n        });\n        const data = await response.json();\n        updatedAvailability[room.id] = !data.unavailableRooms.includes(room.id);\n      } catch (error) {\n        console.error(`Error al verificar disponibilidad para la habitación ${room.id}:`, error);\n        updatedAvailability[room.id] = false;\n      }\n    }\n    setAvailability(updatedAvailability);\n  };\n  useEffect(() => {\n    if (checkIn && checkOut) {\n      calculateAvailability();\n    }\n  }, [checkIn, checkOut]);\n  const handleSelectChange = (id, value) => {\n    setSelectedOptions(prev => ({\n      ...prev,\n      [id]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"home-title\",\n      children: \"Bienvenido al Hostal Jallalla\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Elige una fecha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: checkIn,\n        onChange: date => setCheckIn(date),\n        locale: \"es\",\n        minDate: today,\n        dateFormat: \"dd/MM/yyyy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: checkOut,\n        onChange: date => date > checkIn && setCheckOut(date),\n        locale: \"es\",\n        minDate: new Date(checkIn.getTime() + 24 * 60 * 60 * 1000),\n        dateFormat: \"dd/MM/yyyy\",\n        className: \"hidden-calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"room-list\",\n      children: sortedRoomsData.map(room => /*#__PURE__*/_jsxDEV(RoomCard, {\n        room: room,\n        availability: availability[room.id] // Pasar disponibilidad específica\n        ,\n        selectedOptions: selectedOptions,\n        handleSelectChange: handleSelectChange\n      }, room.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"D00HEtJh5WxYt54qeNcLvTRSGhk=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","RoomCard","roomsData","DatePicker","registerLocale","es","Footer","jsxDEV","_jsxDEV","Home","_s","today","Date","tomorrow","getTime","checkIn","setCheckIn","checkOut","setCheckOut","availability","setAvailability","selectedOptions","setSelectedOptions","reduce","acc","room","id","sortedRoomsData","sort","a","b","calculateAvailability","updatedAvailability","response","fetch","method","headers","body","JSON","stringify","roomId","toISOString","split","data","json","unavailableRooms","includes","error","console","handleSelectChange","value","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","selected","onChange","date","locale","minDate","dateFormat","map","_c","$RefreshReg$"],"sources":["C:/Users/Jonathan/Desktop/Proyecto Hostal/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport RoomCard from '../components/RoomCard';\r\nimport roomsData from '../data/roomsData';\r\nimport DatePicker, { registerLocale } from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport es from 'date-fns/locale/es';\r\nimport '../styles/Home.css';\r\nimport Footer from '../components/Footer';\r\n\r\nregisterLocale(\"es\", es);\r\n\r\nconst Home = () => {\r\n    const today = new Date();\r\n    const tomorrow = new Date(today.getTime() + 24 * 60 * 60 * 1000);\r\n\r\n    const [checkIn, setCheckIn] = useState(today);\r\n    const [checkOut, setCheckOut] = useState(tomorrow);\r\n    const [availability, setAvailability] = useState({});\r\n    const [selectedOptions, setSelectedOptions] = useState(\r\n        roomsData.reduce((acc, room) => ({ ...acc, [room.id]: 1 }), {})\r\n    );\r\n\r\n    const sortedRoomsData = [...roomsData].sort((a, b) => a.id - b.id);\r\n\r\n    // Calcular disponibilidad para todas las habitaciones\r\n    const calculateAvailability = async () => {\r\n        const updatedAvailability = {};\r\n\r\n        for (const room of sortedRoomsData) {\r\n            try {\r\n                const response = await fetch(\"https://hostaljallalla2.onrender.com/api/reservations/check-availability\", {\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify({\r\n                        roomId: room.id,\r\n                        checkIn: checkIn.toISOString().split(\"T\")[0],\r\n                        checkOut: checkOut.toISOString().split(\"T\")[0],\r\n                    }),\r\n                });\r\n\r\n                const data = await response.json();\r\n                updatedAvailability[room.id] = !data.unavailableRooms.includes(room.id);\r\n            } catch (error) {\r\n                console.error(`Error al verificar disponibilidad para la habitación ${room.id}:`, error);\r\n                updatedAvailability[room.id] = false;\r\n            }\r\n        }\r\n\r\n        setAvailability(updatedAvailability);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (checkIn && checkOut) {\r\n            calculateAvailability();\r\n        }\r\n    }, [checkIn, checkOut]);\r\n\r\n    const handleSelectChange = (id, value) => {\r\n        setSelectedOptions((prev) => ({ ...prev, [id]: value }));\r\n    };\r\n\r\n    return (\r\n        <div className=\"home-container\">\r\n            <h1 className=\"home-title\">Bienvenido al Hostal Jallalla</h1>\r\n\r\n            {/* Calendarios */}\r\n            <div className=\"calendar-container\">\r\n                <label>Elige una fecha</label>\r\n                <DatePicker\r\n                    selected={checkIn}\r\n                    onChange={(date) => setCheckIn(date)}\r\n                    locale=\"es\"\r\n                    minDate={today}\r\n                    dateFormat=\"dd/MM/yyyy\"\r\n                />\r\n                <DatePicker\r\n                    selected={checkOut}\r\n                    onChange={(date) => date > checkIn && setCheckOut(date)}\r\n                    locale=\"es\"\r\n                    minDate={new Date(checkIn.getTime() + 24 * 60 * 60 * 1000)}\r\n                    dateFormat=\"dd/MM/yyyy\"\r\n                    className=\"hidden-calendar\"\r\n                />\r\n            </div>\r\n\r\n            {/* Lista de habitaciones */}\r\n            <div className=\"room-list\">\r\n                {sortedRoomsData.map((room) => (\r\n                    <RoomCard\r\n                        key={room.id}\r\n                        room={room}\r\n                        availability={availability[room.id]} // Pasar disponibilidad específica\r\n                        selectedOptions={selectedOptions}\r\n                        handleSelectChange={handleSelectChange}\r\n                    />\r\n                ))}\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}