{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonathan\\\\Desktop\\\\Proyecto Hostal\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport RoomList from '../components/RoomList';\nimport roomsData from '../data/roomsData';\nimport DatePicker, { registerLocale } from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport es from 'date-fns/locale/es';\nimport '../styles/Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nregisterLocale(\"es\", es);\nconst Home = () => {\n  _s();\n  const navigate = useNavigate();\n\n  // Fechas inicializadas automáticamente\n  const today = new Date();\n  const tomorrow = new Date(today.getTime() + 24 * 60 * 60 * 1000);\n  const [checkIn, setCheckIn] = useState(today);\n  const [checkOut, setCheckOut] = useState(tomorrow);\n  const [reservations, setReservations] = useState([]); // Lista de reservas desde la base de datos\n  const [availability, setAvailability] = useState({}); // Estado de disponibilidad\n\n  const sortedRoomsData = [...roomsData].sort((a, b) => a.id - b.id);\n\n  // Obtener todas las reservas desde el backend\n  const fetchReservations = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/reservations\"); // Ajusta el endpoint\n      const data = await response.json();\n      setReservations(data); // Guardar reservas en el estado\n    } catch (error) {\n      console.error(\"Error al obtener las reservas:\", error);\n    }\n  };\n\n  // Calcular disponibilidad para todas las habitaciones\n  const calculateAvailability = () => {\n    const updatedAvailability = {};\n    sortedRoomsData.forEach(room => {\n      // Por defecto, la habitación está disponible\n      updatedAvailability[room.id] = true;\n\n      // Comparar fechas seleccionadas con reservas\n      reservations.forEach(res => {\n        const resCheckIn = new Date(res.checkIn);\n        const resCheckOut = new Date(res.checkOut);\n        if (room.id === res.roomId &&\n        // Coincide el ID de la habitación\n        !(checkOut <= resCheckIn || checkIn >= resCheckOut) // Solapamiento de fechas\n        ) {\n          updatedAvailability[room.id] = false; // No disponible\n        }\n      });\n    });\n    setAvailability(updatedAvailability);\n  };\n\n  // Ajustar automáticamente la fecha de salida\n  const handleCheckInChange = date => {\n    setCheckIn(date);\n    const nextDay = new Date(date.getTime() + 24 * 60 * 60 * 1000);\n    setCheckOut(nextDay);\n  };\n\n  // Cargar las reservas al montar el componente\n  useEffect(() => {\n    fetchReservations();\n  }, []);\n\n  // Recalcular disponibilidad cuando cambian las fechas o las reservas\n  useEffect(() => {\n    if (reservations.length > 0) {\n      calculateAvailability();\n    }\n  }, [checkIn, checkOut, reservations]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"home-title\",\n      children: \"Bienvenido al Hostal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Fecha de ingreso:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: checkIn,\n        onChange: handleCheckInChange,\n        locale: \"es\",\n        minDate: today,\n        dateFormat: \"dd/MM/yyyy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Fecha de salida:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: checkOut,\n        onChange: date => date > checkIn && setCheckOut(date),\n        locale: \"es\",\n        minDate: new Date(checkIn.getTime() + 24 * 60 * 60 * 1000),\n        dateFormat: \"dd/MM/yyyy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/admin'),\n        className: \"admin-button\",\n        children: \"Administrador\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RoomList, {\n      rooms: sortedRoomsData,\n      availability: availability\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"7d6EMXr8iWbEk5jDMhuxvNpJ4tM=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","RoomList","roomsData","DatePicker","registerLocale","es","jsxDEV","_jsxDEV","Home","_s","navigate","today","Date","tomorrow","getTime","checkIn","setCheckIn","checkOut","setCheckOut","reservations","setReservations","availability","setAvailability","sortedRoomsData","sort","a","b","id","fetchReservations","response","fetch","data","json","error","console","calculateAvailability","updatedAvailability","forEach","room","res","resCheckIn","resCheckOut","roomId","handleCheckInChange","date","nextDay","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","selected","onChange","locale","minDate","dateFormat","onClick","rooms","_c","$RefreshReg$"],"sources":["C:/Users/Jonathan/Desktop/Proyecto Hostal/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport RoomList from '../components/RoomList';\r\nimport roomsData from '../data/roomsData';\r\nimport DatePicker, { registerLocale } from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport es from 'date-fns/locale/es';\r\nimport '../styles/Home.css';\r\n\r\nregisterLocale(\"es\", es);\r\n\r\nconst Home = () => {\r\n    const navigate = useNavigate();\r\n\r\n    // Fechas inicializadas automáticamente\r\n    const today = new Date();\r\n    const tomorrow = new Date(today.getTime() + 24 * 60 * 60 * 1000);\r\n\r\n    const [checkIn, setCheckIn] = useState(today);\r\n    const [checkOut, setCheckOut] = useState(tomorrow);\r\n    const [reservations, setReservations] = useState([]); // Lista de reservas desde la base de datos\r\n    const [availability, setAvailability] = useState({}); // Estado de disponibilidad\r\n\r\n    const sortedRoomsData = [...roomsData].sort((a, b) => a.id - b.id);\r\n\r\n    // Obtener todas las reservas desde el backend\r\n    const fetchReservations = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/api/reservations\"); // Ajusta el endpoint\r\n            const data = await response.json();\r\n            setReservations(data); // Guardar reservas en el estado\r\n        } catch (error) {\r\n            console.error(\"Error al obtener las reservas:\", error);\r\n        }\r\n    };\r\n\r\n    // Calcular disponibilidad para todas las habitaciones\r\n    const calculateAvailability = () => {\r\n        const updatedAvailability = {};\r\n\r\n        sortedRoomsData.forEach((room) => {\r\n            // Por defecto, la habitación está disponible\r\n            updatedAvailability[room.id] = true;\r\n\r\n            // Comparar fechas seleccionadas con reservas\r\n            reservations.forEach((res) => {\r\n                const resCheckIn = new Date(res.checkIn);\r\n                const resCheckOut = new Date(res.checkOut);\r\n\r\n                if (\r\n                    room.id === res.roomId && // Coincide el ID de la habitación\r\n                    !(checkOut <= resCheckIn || checkIn >= resCheckOut) // Solapamiento de fechas\r\n                ) {\r\n                    updatedAvailability[room.id] = false; // No disponible\r\n                }\r\n            });\r\n        });\r\n\r\n        setAvailability(updatedAvailability);\r\n    };\r\n\r\n    // Ajustar automáticamente la fecha de salida\r\n    const handleCheckInChange = (date) => {\r\n        setCheckIn(date);\r\n        const nextDay = new Date(date.getTime() + 24 * 60 * 60 * 1000);\r\n        setCheckOut(nextDay);\r\n    };\r\n\r\n    // Cargar las reservas al montar el componente\r\n    useEffect(() => {\r\n        fetchReservations();\r\n    }, []);\r\n\r\n    // Recalcular disponibilidad cuando cambian las fechas o las reservas\r\n    useEffect(() => {\r\n        if (reservations.length > 0) {\r\n            calculateAvailability();\r\n        }\r\n    }, [checkIn, checkOut, reservations]);\r\n\r\n    return (\r\n        <div className=\"home-container\">\r\n            <h1 className=\"home-title\">Bienvenido al Hostal</h1>\r\n\r\n            {/* Calendarios */}\r\n            <div className=\"calendar-container\">\r\n                <label>Fecha de ingreso:</label>\r\n                <DatePicker\r\n                    selected={checkIn}\r\n                    onChange={handleCheckInChange}\r\n                    locale=\"es\"\r\n                    minDate={today}\r\n                    dateFormat=\"dd/MM/yyyy\"\r\n                />\r\n\r\n                <label>Fecha de salida:</label>\r\n                <DatePicker\r\n                    selected={checkOut}\r\n                    onChange={(date) => date > checkIn && setCheckOut(date)}\r\n                    locale=\"es\"\r\n                    minDate={new Date(checkIn.getTime() + 24 * 60 * 60 * 1000)}\r\n                    dateFormat=\"dd/MM/yyyy\"\r\n                />\r\n            </div>\r\n\r\n            {/* Botón Administrador */}\r\n            <div className=\"admin-button-container\">\r\n                <button onClick={() => navigate('/admin')} className=\"admin-button\">\r\n                    Administrador\r\n                </button>\r\n            </div>\r\n\r\n            {/* Lista de habitaciones */}\r\n            <RoomList rooms={sortedRoomsData} availability={availability} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}