{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonathan\\\\Desktop\\\\Proyecto Hostal\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport RoomList from '../components/RoomList';\nimport roomsData from '../data/roomsData';\nimport DatePicker, { registerLocale } from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport es from 'date-fns/locale/es';\nimport '../styles/Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nregisterLocale(\"es\", es);\nconst Home = () => {\n  _s();\n  const navigate = useNavigate();\n\n  // Fechas iniciales\n  const today = new Date();\n  const tomorrow = new Date(today.getTime() + 24 * 60 * 60 * 1000);\n  const [checkIn, setCheckIn] = useState(today);\n  const [checkOut, setCheckOut] = useState(tomorrow);\n  const [reservations, setReservations] = useState([]); // Lista de reservas\n  const [availability, setAvailability] = useState({}); // Estado de disponibilidad\n\n  const sortedRoomsData = [...roomsData].sort((a, b) => a.id - b.id);\n\n  // Obtener reservas desde el backend\n  const fetchReservations = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/reservations\");\n      const data = await response.json();\n      console.log(\"Reservas obtenidas del backend:\", data); // Depuración\n      setReservations(data);\n    } catch (error) {\n      console.error(\"Error al obtener reservas:\", error);\n    }\n  };\n\n  // Calcular disponibilidad comparando fechas seleccionadas con reservas\n  const calculateAvailability = () => {\n    const updatedAvailability = {};\n    sortedRoomsData.forEach(room => {\n      let isAvailable = true;\n      reservations.forEach(res => {\n        const resCheckIn = new Date(res.checkIn).getTime();\n        const resCheckOut = new Date(res.checkOut).getTime();\n        const selectedCheckIn = checkIn.getTime();\n        const selectedCheckOut = checkOut.getTime();\n\n        // Comparar si hay solapamiento de fechas\n        if (room.id === res.roomId &&\n        // Coincide el ID de habitación\n        selectedCheckOut > resCheckIn && selectedCheckIn < resCheckOut // Solapamiento\n        ) {\n          isAvailable = false;\n        }\n      });\n      updatedAvailability[room.id] = isAvailable;\n    });\n    console.log(\"Disponibilidad calculada:\", updatedAvailability); // Depuración\n    setAvailability(updatedAvailability);\n  };\n\n  // Obtener reservas al montar el componente\n  useEffect(() => {\n    fetchReservations();\n  }, []);\n\n  // Recalcular disponibilidad cuando cambian las fechas o las reservas\n  useEffect(() => {\n    console.log(\"checkIn:\", checkIn, \"checkOut:\", checkOut); // Depuración\n    if (reservations.length > 0) {\n      calculateAvailability();\n    }\n  }, [checkIn, checkOut, reservations]);\n\n  // Ajustar fecha de salida automáticamente\n  const handleCheckInChange = date => {\n    console.log(\"Fecha de ingreso seleccionada:\", date); // Depuración\n    setCheckIn(date);\n    const nextDay = new Date(date.getTime() + 24 * 60 * 60 * 1000);\n    setCheckOut(nextDay);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"home-title\",\n      children: \"Bienvenido al Hostal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Fecha de ingreso:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: checkIn,\n        onChange: handleCheckInChange,\n        locale: \"es\",\n        minDate: today,\n        dateFormat: \"dd/MM/yyyy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"none\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Fecha de salida:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: checkOut,\n          onChange: date => date > checkIn && setCheckOut(date),\n          locale: \"es\",\n          minDate: new Date(checkIn.getTime() + 24 * 60 * 60 * 1000),\n          dateFormat: \"dd/MM/yyyy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), \");\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/admin'),\n        className: \"admin-button\",\n        children: \"Administrador\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RoomList, {\n      rooms: sortedRoomsData,\n      availability: availability\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"7d6EMXr8iWbEk5jDMhuxvNpJ4tM=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","RoomList","roomsData","DatePicker","registerLocale","es","jsxDEV","_jsxDEV","Home","_s","navigate","today","Date","tomorrow","getTime","checkIn","setCheckIn","checkOut","setCheckOut","reservations","setReservations","availability","setAvailability","sortedRoomsData","sort","a","b","id","fetchReservations","response","fetch","data","json","console","log","error","calculateAvailability","updatedAvailability","forEach","room","isAvailable","res","resCheckIn","resCheckOut","selectedCheckIn","selectedCheckOut","roomId","length","handleCheckInChange","date","nextDay","className","children","fileName","_jsxFileName","lineNumber","columnNumber","selected","onChange","locale","minDate","dateFormat","style","display","onClick","rooms","_c","$RefreshReg$"],"sources":["C:/Users/Jonathan/Desktop/Proyecto Hostal/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport RoomList from '../components/RoomList';\r\nimport roomsData from '../data/roomsData';\r\nimport DatePicker, { registerLocale } from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport es from 'date-fns/locale/es';\r\nimport '../styles/Home.css';\r\n\r\nregisterLocale(\"es\", es);\r\n\r\nconst Home = () => {\r\n    const navigate = useNavigate();\r\n\r\n    // Fechas iniciales\r\n    const today = new Date();\r\n    const tomorrow = new Date(today.getTime() + 24 * 60 * 60 * 1000);\r\n\r\n    const [checkIn, setCheckIn] = useState(today);\r\n    const [checkOut, setCheckOut] = useState(tomorrow);\r\n    const [reservations, setReservations] = useState([]); // Lista de reservas\r\n    const [availability, setAvailability] = useState({}); // Estado de disponibilidad\r\n\r\n    const sortedRoomsData = [...roomsData].sort((a, b) => a.id - b.id);\r\n\r\n    // Obtener reservas desde el backend\r\n    const fetchReservations = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/api/reservations\");\r\n            const data = await response.json();\r\n            console.log(\"Reservas obtenidas del backend:\", data); // Depuración\r\n            setReservations(data);\r\n        } catch (error) {\r\n            console.error(\"Error al obtener reservas:\", error);\r\n        }\r\n    };\r\n\r\n    // Calcular disponibilidad comparando fechas seleccionadas con reservas\r\n    const calculateAvailability = () => {\r\n        const updatedAvailability = {};\r\n\r\n        sortedRoomsData.forEach((room) => {\r\n            let isAvailable = true;\r\n\r\n            reservations.forEach((res) => {\r\n                const resCheckIn = new Date(res.checkIn).getTime();\r\n                const resCheckOut = new Date(res.checkOut).getTime();\r\n                const selectedCheckIn = checkIn.getTime();\r\n                const selectedCheckOut = checkOut.getTime();\r\n\r\n                // Comparar si hay solapamiento de fechas\r\n                if (\r\n                    room.id === res.roomId && // Coincide el ID de habitación\r\n                    selectedCheckOut > resCheckIn && selectedCheckIn < resCheckOut // Solapamiento\r\n                ) {\r\n                    isAvailable = false;\r\n                }\r\n            });\r\n\r\n            updatedAvailability[room.id] = isAvailable;\r\n        });\r\n\r\n        console.log(\"Disponibilidad calculada:\", updatedAvailability); // Depuración\r\n        setAvailability(updatedAvailability);\r\n    };\r\n\r\n    // Obtener reservas al montar el componente\r\n    useEffect(() => {\r\n        fetchReservations();\r\n    }, []);\r\n\r\n    // Recalcular disponibilidad cuando cambian las fechas o las reservas\r\n    useEffect(() => {\r\n        console.log(\"checkIn:\", checkIn, \"checkOut:\", checkOut); // Depuración\r\n        if (reservations.length > 0) {\r\n            calculateAvailability();\r\n        }\r\n    }, [checkIn, checkOut, reservations]);\r\n\r\n    // Ajustar fecha de salida automáticamente\r\n    const handleCheckInChange = (date) => {\r\n        console.log(\"Fecha de ingreso seleccionada:\", date); // Depuración\r\n        setCheckIn(date);\r\n        const nextDay = new Date(date.getTime() + 24 * 60 * 60 * 1000);\r\n        setCheckOut(nextDay);\r\n    };\r\n\r\n    return (\r\n        <div className=\"home-container\">\r\n            <h1 className=\"home-title\">Bienvenido al Hostal</h1>\r\n\r\n            {/* Calendarios */}\r\n            <div className=\"calendar-container\">\r\n                <label>Fecha de ingreso:</label>\r\n                <DatePicker\r\n                    selected={checkIn}\r\n                    onChange={handleCheckInChange}\r\n                    locale=\"es\"\r\n                    minDate={today}\r\n                    dateFormat=\"dd/MM/yyyy\"\r\n                />\r\n{/* Calendario de salida oculto */}\r\n<div style={{ display: \"none\" }}>\r\n            <label>Fecha de salida:</label>\r\n            <DatePicker\r\n                selected={checkOut}\r\n                onChange={(date) => date > checkIn && setCheckOut(date)}\r\n                locale=\"es\"\r\n                minDate={new Date(checkIn.getTime() + 24 * 60 * 60 * 1000)}\r\n                dateFormat=\"dd/MM/yyyy\"\r\n            />\r\n        </div>\r\n    </div>\r\n);\r\n                \r\n\r\n            {/* Botón Administrador */}\r\n            <div className=\"admin-button-container\">\r\n                <button onClick={() => navigate('/admin')} className=\"admin-button\">\r\n                    Administrador\r\n                </button>\r\n            </div>\r\n\r\n            {/* Lista de habitaciones */}\r\n            <RoomList rooms={sortedRoomsData} availability={availability} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}