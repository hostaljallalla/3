{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonathan\\\\Desktop\\\\Proyecto Hostal\\\\frontend\\\\src\\\\components\\\\RoomList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar'; // Asegúrate de tener react-calendar instalado\nimport 'react-calendar/dist/Calendar.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoomList = ({\n  rooms\n}) => {\n  _s();\n  const [dates, setDates] = useState([new Date(), new Date()]);\n  const [unavailableRooms, setUnavailableRooms] = useState([]);\n\n  // Función para verificar la disponibilidad desde el backend\n  const checkAvailability = async selectedDates => {\n    try {\n      const [checkIn, checkOut] = selectedDates;\n      const response = await axios.post(`${process.env.REACT_APP_API_URL}/reservations/check-availability`, {\n        checkIn: checkIn.toISOString(),\n        checkOut: checkOut.toISOString()\n      });\n      setUnavailableRooms(response.data.unavailableRooms);\n    } catch (error) {\n      console.error('Error al verificar disponibilidad:', error);\n    }\n  };\n\n  // Manejar el cambio de fechas en el calendario\n  const handleDateChange = selectedDates => {\n    setDates(selectedDates);\n    checkAvailability(selectedDates);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bienvenido al Hostal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Selecciona las fechas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      selectRange: true,\n      onChange: handleDateChange,\n      value: dates\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rooms-list\",\n      children: rooms.map(room => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: room.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"ID: \", room.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Precio para 1 persona: \", room.priceForOne, \" CLP\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), room.priceForTwo && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Precio para 2 personas: \", room.priceForTwo, \" CLP\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 46\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Disponibilidad:\", ' ', unavailableRooms.includes(room.id) ? /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'red'\n            },\n            children: \"No disponible\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'green'\n            },\n            children: \"Disponible\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: unavailableRooms.includes(room.id),\n          style: {\n            backgroundColor: unavailableRooms.includes(room.id) ? 'red' : 'green',\n            color: 'white'\n          },\n          children: unavailableRooms.includes(room.id) ? 'No disponible' : 'Reservar'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)]\n      }, room.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(RoomList, \"9OpHacngL/D1xEAqT1r6czIIFjc=\");\n_c = RoomList;\nexport default RoomList;\nvar _c;\n$RefreshReg$(_c, \"RoomList\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","axios","jsxDEV","_jsxDEV","RoomList","rooms","_s","dates","setDates","Date","unavailableRooms","setUnavailableRooms","checkAvailability","selectedDates","checkIn","checkOut","response","post","process","env","REACT_APP_API_URL","toISOString","data","error","console","handleDateChange","children","fileName","_jsxFileName","lineNumber","columnNumber","selectRange","onChange","value","className","map","room","type","id","priceForOne","priceForTwo","includes","style","color","disabled","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/Jonathan/Desktop/Proyecto Hostal/frontend/src/components/RoomList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Calendar from 'react-calendar'; // Asegúrate de tener react-calendar instalado\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport axios from 'axios';\r\n\r\nconst RoomList = ({ rooms }) => {\r\n    const [dates, setDates] = useState([new Date(), new Date()]);\r\n    const [unavailableRooms, setUnavailableRooms] = useState([]);\r\n\r\n    // Función para verificar la disponibilidad desde el backend\r\n    const checkAvailability = async (selectedDates) => {\r\n        try {\r\n            const [checkIn, checkOut] = selectedDates;\r\n            const response = await axios.post(`${process.env.REACT_APP_API_URL}/reservations/check-availability`, {\r\n                checkIn: checkIn.toISOString(),\r\n                checkOut: checkOut.toISOString(),\r\n            });\r\n            setUnavailableRooms(response.data.unavailableRooms);\r\n        } catch (error) {\r\n            console.error('Error al verificar disponibilidad:', error);\r\n        }\r\n    };\r\n\r\n    // Manejar el cambio de fechas en el calendario\r\n    const handleDateChange = (selectedDates) => {\r\n        setDates(selectedDates);\r\n        checkAvailability(selectedDates);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Bienvenido al Hostal</h1>\r\n            <h3>Selecciona las fechas</h3>\r\n            <Calendar selectRange onChange={handleDateChange} value={dates} />\r\n\r\n            <div className=\"rooms-list\">\r\n                {rooms.map((room) => (\r\n                    <div key={room.id} className=\"room-card\">\r\n                        <h3>{room.type}</h3>\r\n                        <p>ID: {room.id}</p>\r\n                        <p>Precio para 1 persona: {room.priceForOne} CLP</p>\r\n                        {room.priceForTwo && <p>Precio para 2 personas: {room.priceForTwo} CLP</p>}\r\n                        <p>\r\n                            Disponibilidad:{' '}\r\n                            {unavailableRooms.includes(room.id) ? (\r\n                                <span style={{ color: 'red' }}>No disponible</span>\r\n                            ) : (\r\n                                <span style={{ color: 'green' }}>Disponible</span>\r\n                            )}\r\n                        </p>\r\n                        <button\r\n                            disabled={unavailableRooms.includes(room.id)}\r\n                            style={{\r\n                                backgroundColor: unavailableRooms.includes(room.id) ? 'red' : 'green',\r\n                                color: 'white',\r\n                            }}\r\n                        >\r\n                            {unavailableRooms.includes(room.id) ? 'No disponible' : 'Reservar'}\r\n                        </button>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RoomList;\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}