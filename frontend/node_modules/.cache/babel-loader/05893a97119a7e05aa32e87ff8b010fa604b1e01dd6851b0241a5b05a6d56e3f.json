{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonathan\\\\Desktop\\\\Proyecto Hostal\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport RoomList from '../components/RoomList';\nimport roomsData from '../data/roomsData';\nimport DatePicker, { registerLocale } from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport es from 'date-fns/locale/es';\nimport '../styles/Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nregisterLocale(\"es\", es);\nconst Home = () => {\n  _s();\n  const navigate = useNavigate();\n\n  // Fechas iniciales\n  const today = new Date();\n  const tomorrow = new Date(today.getTime() + 24 * 60 * 60 * 1000);\n  const [checkIn, setCheckIn] = useState(today);\n  const [checkOut, setCheckOut] = useState(tomorrow);\n  const [reservations, setReservations] = useState([]);\n  const [availability, setAvailability] = useState({});\n  const [selectedOptions, setSelectedOptions] = useState(roomsData.reduce((acc, room) => ({\n    ...acc,\n    [room.id]: 1\n  }), {}));\n  const sortedRoomsData = [...roomsData].sort((a, b) => a.id - b.id);\n  const fetchReservations = async () => {\n    try {\n      const response = await fetch(\"https://hostaljallalla.onrender.com/api/reservations\");\n      const data = await response.json();\n      setReservations(data);\n    } catch (error) {\n      console.error(\"Error al obtener reservas:\", error);\n    }\n  };\n  const calculateAvailability = () => {\n    const updatedAvailability = {};\n    sortedRoomsData.forEach(room => {\n      let isAvailable = true;\n      reservations.forEach(res => {\n        const resCheckIn = new Date(res.checkIn).getTime();\n        const resCheckOut = new Date(res.checkOut).getTime();\n        const selectedCheckIn = checkIn.getTime();\n        const selectedCheckOut = checkOut.getTime();\n        if (room.id === res.roomId && selectedCheckOut > resCheckIn && selectedCheckIn < resCheckOut) {\n          isAvailable = false;\n        }\n      });\n      updatedAvailability[room.id] = isAvailable;\n    });\n    setAvailability(updatedAvailability);\n  };\n  useEffect(() => {\n    fetchReservations();\n  }, []);\n  useEffect(() => {\n    if (reservations.length > 0) {\n      calculateAvailability();\n    }\n  }, [checkIn, checkOut, reservations]);\n  const handleSelectChange = (id, value) => {\n    setSelectedOptions(prev => ({\n      ...prev,\n      [id]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"home-title\",\n      children: \"Bienvenido al Hostal Jallalla\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Elige una fecha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: checkIn,\n        onChange: date => setCheckIn(date),\n        locale: \"es\",\n        minDate: today,\n        dateFormat: \"dd/MM/yyyy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: checkOut,\n        onChange: date => date > checkIn && setCheckOut(date),\n        locale: \"es\",\n        minDate: new Date(checkIn.getTime() + 24 * 60 * 60 * 1000),\n        dateFormat: \"dd/MM/yyyy\",\n        className: \"hidden-calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RoomList, {\n      rooms: sortedRoomsData,\n      availability: availability,\n      selectedOptions: selectedOptions,\n      handleSelectChange: handleSelectChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"A6gE4vu0pWLGgeBkTqYo6pF2XzM=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","RoomList","roomsData","DatePicker","registerLocale","es","jsxDEV","_jsxDEV","Home","_s","navigate","today","Date","tomorrow","getTime","checkIn","setCheckIn","checkOut","setCheckOut","reservations","setReservations","availability","setAvailability","selectedOptions","setSelectedOptions","reduce","acc","room","id","sortedRoomsData","sort","a","b","fetchReservations","response","fetch","data","json","error","console","calculateAvailability","updatedAvailability","forEach","isAvailable","res","resCheckIn","resCheckOut","selectedCheckIn","selectedCheckOut","roomId","length","handleSelectChange","value","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","selected","onChange","date","locale","minDate","dateFormat","rooms","_c","$RefreshReg$"],"sources":["C:/Users/Jonathan/Desktop/Proyecto Hostal/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport RoomList from '../components/RoomList';\r\nimport roomsData from '../data/roomsData';\r\nimport DatePicker, { registerLocale } from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport es from 'date-fns/locale/es';\r\nimport '../styles/Home.css';\r\n\r\nregisterLocale(\"es\", es);\r\n\r\nconst Home = () => {\r\n    const navigate = useNavigate();\r\n\r\n    // Fechas iniciales\r\n    const today = new Date();\r\n    const tomorrow = new Date(today.getTime() + 24 * 60 * 60 * 1000);\r\n\r\n    const [checkIn, setCheckIn] = useState(today);\r\n    const [checkOut, setCheckOut] = useState(tomorrow);\r\n    const [reservations, setReservations] = useState([]);\r\n    const [availability, setAvailability] = useState({});\r\n    const [selectedOptions, setSelectedOptions] = useState(\r\n        roomsData.reduce((acc, room) => ({ ...acc, [room.id]: 1 }), {})\r\n    );\r\n\r\n    const sortedRoomsData = [...roomsData].sort((a, b) => a.id - b.id);\r\n\r\n    const fetchReservations = async () => {\r\n        try {\r\n            const response = await fetch(\"https://hostaljallalla.onrender.com/api/reservations\");\r\n            const data = await response.json();\r\n            setReservations(data);\r\n        } catch (error) {\r\n            console.error(\"Error al obtener reservas:\", error);\r\n        }\r\n    };\r\n\r\n    const calculateAvailability = () => {\r\n        const updatedAvailability = {};\r\n\r\n        sortedRoomsData.forEach((room) => {\r\n            let isAvailable = true;\r\n\r\n            reservations.forEach((res) => {\r\n                const resCheckIn = new Date(res.checkIn).getTime();\r\n                const resCheckOut = new Date(res.checkOut).getTime();\r\n                const selectedCheckIn = checkIn.getTime();\r\n                const selectedCheckOut = checkOut.getTime();\r\n\r\n                if (\r\n                    room.id === res.roomId &&\r\n                    selectedCheckOut > resCheckIn &&\r\n                    selectedCheckIn < resCheckOut\r\n                ) {\r\n                    isAvailable = false;\r\n                }\r\n            });\r\n\r\n            updatedAvailability[room.id] = isAvailable;\r\n        });\r\n\r\n        setAvailability(updatedAvailability);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchReservations();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (reservations.length > 0) {\r\n            calculateAvailability();\r\n        }\r\n    }, [checkIn, checkOut, reservations]);\r\n\r\n    const handleSelectChange = (id, value) => {\r\n        setSelectedOptions((prev) => ({ ...prev, [id]: value }));\r\n    };\r\n\r\n    return (\r\n        <div className=\"home-container\">\r\n            <h1 className=\"home-title\">Bienvenido al Hostal Jallalla</h1>\r\n\r\n            {/* Calendarios */}\r\n            <div className=\"calendar-container\">\r\n                <label>Elige una fecha</label>\r\n                <DatePicker\r\n                    selected={checkIn}\r\n                    onChange={(date) => setCheckIn(date)}\r\n                    locale=\"es\"\r\n                    minDate={today}\r\n                    dateFormat=\"dd/MM/yyyy\"\r\n                />\r\n\r\n        \r\n                <DatePicker selected={checkOut}\r\n    onChange={(date) => date > checkIn && setCheckOut(date)}\r\n    locale=\"es\"\r\n    minDate={new Date(checkIn.getTime() + 24 * 60 * 60 * 1000)}\r\n    dateFormat=\"dd/MM/yyyy\"\r\n    className=\"hidden-calendar\"\r\n/>\r\n\r\n            </div>\r\n\r\n\r\n            {/* Lista de habitaciones */}\r\n            <RoomList\r\n                rooms={sortedRoomsData}\r\n                availability={availability}\r\n                selectedOptions={selectedOptions}\r\n                handleSelectChange={handleSelectChange}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}