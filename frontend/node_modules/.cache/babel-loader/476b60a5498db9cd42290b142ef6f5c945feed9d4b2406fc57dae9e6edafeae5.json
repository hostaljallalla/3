{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonathan\\\\Desktop\\\\Proyecto Hostal\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport RoomList from '../components/RoomList';\nimport roomsData from '../data/roomsData';\nimport DatePicker, { registerLocale } from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport es from 'date-fns/locale/es';\nimport '../styles/Home.css';\nimport Footer from '../components/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nregisterLocale(\"es\", es);\nconst Home = () => {\n  _s();\n  const navigate = useNavigate();\n\n  // Fechas iniciales\n  const today = new Date();\n  const tomorrow = new Date(today.getTime() + 24 * 60 * 60 * 1000);\n  const [checkIn, setCheckIn] = useState(today);\n  const [checkOut, setCheckOut] = useState(tomorrow);\n  const [availability, setAvailability] = useState({});\n  const [selectedOptions, setSelectedOptions] = useState(roomsData.reduce((acc, room) => ({\n    ...acc,\n    [room.id]: 1\n  }), {}));\n  const sortedRoomsData = [...roomsData].sort((a, b) => a.id - b.id);\n\n  // Nueva función para calcular disponibilidad\n  const calculateAvailability = async (newCheckIn = checkIn, newCheckOut = checkOut) => {\n    const updatedAvailability = {};\n    for (const room of sortedRoomsData) {\n      try {\n        const response = await fetch(\"https://hostaljallalla2.onrender.com/api/reservations/check-availability\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            roomId: room.id,\n            checkIn: newCheckIn.toISOString().split(\"T\")[0],\n            checkOut: newCheckOut.toISOString().split(\"T\")[0]\n          })\n        });\n        const data = await response.json();\n        updatedAvailability[room.id] = !data.unavailableRooms.includes(room.id);\n      } catch (error) {\n        console.error(`Error al verificar disponibilidad para la habitación ${room.id}:`, error);\n        updatedAvailability[room.id] = false;\n      }\n    }\n    setAvailability(updatedAvailability);\n  };\n\n  // Función para manejar cambios en CheckIn\n  const handleCheckInChange = date => {\n    setCheckIn(date);\n\n    // Ajustar checkOut si es anterior al nuevo checkIn\n    if (!checkOut || date >= checkOut) {\n      const nextDay = new Date(date.getTime() + 24 * 60 * 60 * 1000);\n      setCheckOut(nextDay);\n      calculateAvailability(date, nextDay); // Calcular disponibilidad con nuevas fechas\n    } else {\n      calculateAvailability(date, checkOut);\n    }\n  };\n\n  // Función para manejar cambios en CheckOut\n  const handleCheckOutChange = date => {\n    setCheckOut(date);\n    calculateAvailability(checkIn, date); // Calcular disponibilidad con nuevas fechas\n  };\n\n  // Ejecutar cálculo inicial de disponibilidad\n  useEffect(() => {\n    calculateAvailability();\n  }, []);\n  const handleSelectChange = (id, value) => {\n    setSelectedOptions(prev => ({\n      ...prev,\n      [id]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"home-title\",\n      children: \"Bienvenido al Hostal Jallalla\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Elige una fecha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: checkIn,\n        onChange: handleCheckInChange,\n        locale: \"es\",\n        minDate: today,\n        dateFormat: \"dd/MM/yyyy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: checkOut,\n        onChange: handleCheckOutChange,\n        locale: \"es\",\n        minDate: new Date(checkIn.getTime() + 24 * 60 * 60 * 1000),\n        dateFormat: \"dd/MM/yyyy\",\n        className: \"hidden-calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RoomList, {\n      rooms: sortedRoomsData,\n      availability: availability,\n      selectedOptions: selectedOptions,\n      handleSelectChange: handleSelectChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"9o7Pd4zwLYfy7p1a8eGLDEVNBzA=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","RoomList","roomsData","DatePicker","registerLocale","es","Footer","jsxDEV","_jsxDEV","Home","_s","navigate","today","Date","tomorrow","getTime","checkIn","setCheckIn","checkOut","setCheckOut","availability","setAvailability","selectedOptions","setSelectedOptions","reduce","acc","room","id","sortedRoomsData","sort","a","b","calculateAvailability","newCheckIn","newCheckOut","updatedAvailability","response","fetch","method","headers","body","JSON","stringify","roomId","toISOString","split","data","json","unavailableRooms","includes","error","console","handleCheckInChange","date","nextDay","handleCheckOutChange","handleSelectChange","value","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","selected","onChange","locale","minDate","dateFormat","rooms","_c","$RefreshReg$"],"sources":["C:/Users/Jonathan/Desktop/Proyecto Hostal/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport RoomList from '../components/RoomList';\r\nimport roomsData from '../data/roomsData';\r\nimport DatePicker, { registerLocale } from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport es from 'date-fns/locale/es';\r\nimport '../styles/Home.css';\r\nimport Footer from '../components/Footer';\r\n\r\nregisterLocale(\"es\", es);\r\n\r\nconst Home = () => {\r\n    const navigate = useNavigate();\r\n\r\n    // Fechas iniciales\r\n    const today = new Date();\r\n    const tomorrow = new Date(today.getTime() + 24 * 60 * 60 * 1000);\r\n\r\n    const [checkIn, setCheckIn] = useState(today);\r\n    const [checkOut, setCheckOut] = useState(tomorrow);\r\n    const [availability, setAvailability] = useState({});\r\n    const [selectedOptions, setSelectedOptions] = useState(\r\n        roomsData.reduce((acc, room) => ({ ...acc, [room.id]: 1 }), {})\r\n    );\r\n\r\n    const sortedRoomsData = [...roomsData].sort((a, b) => a.id - b.id);\r\n\r\n    // Nueva función para calcular disponibilidad\r\n    const calculateAvailability = async (newCheckIn = checkIn, newCheckOut = checkOut) => {\r\n        const updatedAvailability = {};\r\n\r\n        for (const room of sortedRoomsData) {\r\n            try {\r\n                const response = await fetch(\"https://hostaljallalla2.onrender.com/api/reservations/check-availability\", {\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify({\r\n                        roomId: room.id,\r\n                        checkIn: newCheckIn.toISOString().split(\"T\")[0],\r\n                        checkOut: newCheckOut.toISOString().split(\"T\")[0],\r\n                    }),\r\n                });\r\n\r\n                const data = await response.json();\r\n                updatedAvailability[room.id] = !data.unavailableRooms.includes(room.id);\r\n            } catch (error) {\r\n                console.error(`Error al verificar disponibilidad para la habitación ${room.id}:`, error);\r\n                updatedAvailability[room.id] = false;\r\n            }\r\n        }\r\n\r\n        setAvailability(updatedAvailability);\r\n    };\r\n\r\n    // Función para manejar cambios en CheckIn\r\n    const handleCheckInChange = (date) => {\r\n        setCheckIn(date);\r\n\r\n        // Ajustar checkOut si es anterior al nuevo checkIn\r\n        if (!checkOut || date >= checkOut) {\r\n            const nextDay = new Date(date.getTime() + 24 * 60 * 60 * 1000);\r\n            setCheckOut(nextDay);\r\n            calculateAvailability(date, nextDay); // Calcular disponibilidad con nuevas fechas\r\n        } else {\r\n            calculateAvailability(date, checkOut);\r\n        }\r\n    };\r\n\r\n    // Función para manejar cambios en CheckOut\r\n    const handleCheckOutChange = (date) => {\r\n        setCheckOut(date);\r\n        calculateAvailability(checkIn, date); // Calcular disponibilidad con nuevas fechas\r\n    };\r\n\r\n    // Ejecutar cálculo inicial de disponibilidad\r\n    useEffect(() => {\r\n        calculateAvailability();\r\n    }, []);\r\n\r\n    const handleSelectChange = (id, value) => {\r\n        setSelectedOptions((prev) => ({ ...prev, [id]: value }));\r\n    };\r\n\r\n    return (\r\n        <div className=\"home-container\">\r\n            <h1 className=\"home-title\">Bienvenido al Hostal Jallalla</h1>\r\n\r\n            {/* Calendarios */}\r\n            <div className=\"calendar-container\">\r\n                <label>Elige una fecha</label>\r\n                <DatePicker\r\n                    selected={checkIn}\r\n                    onChange={handleCheckInChange}\r\n                    locale=\"es\"\r\n                    minDate={today}\r\n                    dateFormat=\"dd/MM/yyyy\"\r\n                />\r\n\r\n                <DatePicker\r\n                    selected={checkOut}\r\n                    onChange={handleCheckOutChange}\r\n                    locale=\"es\"\r\n                    minDate={new Date(checkIn.getTime() + 24 * 60 * 60 * 1000)}\r\n                    dateFormat=\"dd/MM/yyyy\"\r\n                    className=\"hidden-calendar\"\r\n                />\r\n            </div>\r\n\r\n            {/* Lista de habitaciones */}\r\n            <RoomList\r\n                rooms={sortedRoomsData}\r\n                availability={availability}\r\n                selectedOptions={selectedOptions}\r\n                handleSelectChange={handleSelectChange}\r\n            />\r\n            <Footer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}