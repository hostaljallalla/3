{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonathan\\\\Desktop\\\\Proyecto Hostal\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport RoomList from '../components/RoomList';\nimport roomsData from '../data/roomsData';\nimport DatePicker, { registerLocale } from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport es from 'date-fns/locale/es';\nimport '../styles/Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nregisterLocale(\"es\", es);\nconst Home = () => {\n  _s();\n  const [checkIn, setCheckIn] = useState(null); // Fecha de ingreso\n  const [checkOut, setCheckOut] = useState(null); // Fecha de salida\n  const [availability, setAvailability] = useState({}); // Disponibilidad de habitaciones\n\n  // Función para verificar disponibilidad en el backend\n  const fetchAvailability = async () => {\n    if (!checkIn || !checkOut) return; // No hacer nada si faltan fechas\n    const formattedCheckIn = checkIn.toISOString().split(\"T\")[0];\n    const formattedCheckOut = checkOut.toISOString().split(\"T\")[0];\n    console.log(\"Rango de fechas seleccionado:\", {\n      checkIn: formattedCheckIn,\n      checkOut: formattedCheckOut\n    }); // Depuración\n\n    try {\n      const response = await fetch(\"http://localhost:5000/api/reservations/check-availability\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          checkIn: formattedCheckIn,\n          checkOut: formattedCheckOut\n        })\n      });\n      const data = await response.json();\n      console.log(\"Respuesta del backend:\", data); // Depuración\n\n      // Procesar datos para actualizar disponibilidad\n      const updatedAvailability = roomsData.reduce((acc, room) => {\n        var _data$unavailableRoom;\n        acc[room.id] = !((_data$unavailableRoom = data.unavailableRooms) !== null && _data$unavailableRoom !== void 0 && _data$unavailableRoom.includes(room.id)); // Disponible si no está en unavailableRooms\n        return acc;\n      }, {});\n      console.log(\"Disponibilidad actualizada:\", updatedAvailability); // Depuración\n      setAvailability(updatedAvailability); // Actualizar estado global de disponibilidad\n    } catch (error) {\n      console.error(\"Error al verificar disponibilidad:\", error);\n    }\n  };\n\n  // Llamar a fetchAvailability cuando cambian las fechas seleccionadas\n  useEffect(() => {\n    if (checkIn && checkOut) {\n      fetchAvailability();\n    }\n  }, [checkIn, checkOut]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Bienvenido al Hostal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"20px 0\",\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: \"block\",\n          marginBottom: \"10px\"\n        },\n        children: \"Selecciona tu rango de fechas:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          gap: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: checkIn,\n          onChange: date => {\n            setCheckIn(date);\n            if (checkOut && date >= checkOut) {\n              setCheckOut(null); // Resetear fecha de salida si es inválida\n            }\n          },\n          locale: \"es\",\n          placeholderText: \"Fecha de ingreso\",\n          minDate: new Date(),\n          dateFormat: \"dd/MM/yyyy\",\n          className: \"datepicker-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: checkOut,\n          onChange: date => setCheckOut(date),\n          locale: \"es\",\n          placeholderText: \"Fecha de salida\",\n          minDate: checkIn ? new Date(checkIn.getTime() + 24 * 60 * 60 * 1000) : new Date(),\n          dateFormat: \"dd/MM/yyyy\",\n          className: \"datepicker-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RoomList, {\n      rooms: roomsData,\n      availability: availability\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"funNNTljUQ2G4+4sUUuJI3Se0VQ=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","RoomList","roomsData","DatePicker","registerLocale","es","jsxDEV","_jsxDEV","Home","_s","checkIn","setCheckIn","checkOut","setCheckOut","availability","setAvailability","fetchAvailability","formattedCheckIn","toISOString","split","formattedCheckOut","console","log","response","fetch","method","headers","body","JSON","stringify","data","json","updatedAvailability","reduce","acc","room","_data$unavailableRoom","id","unavailableRooms","includes","error","className","style","padding","children","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","margin","display","marginBottom","justifyContent","gap","selected","onChange","date","locale","placeholderText","minDate","Date","dateFormat","getTime","rooms","_c","$RefreshReg$"],"sources":["C:/Users/Jonathan/Desktop/Proyecto Hostal/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport RoomList from '../components/RoomList';\r\nimport roomsData from '../data/roomsData';\r\nimport DatePicker, { registerLocale } from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport es from 'date-fns/locale/es';\r\nimport '../styles/Home.css';\r\n\r\nregisterLocale(\"es\", es);\r\n\r\nconst Home = () => {\r\n    const [checkIn, setCheckIn] = useState(null); // Fecha de ingreso\r\n    const [checkOut, setCheckOut] = useState(null); // Fecha de salida\r\n    const [availability, setAvailability] = useState({}); // Disponibilidad de habitaciones\r\n\r\n    // Función para verificar disponibilidad en el backend\r\n    const fetchAvailability = async () => {\r\n        if (!checkIn || !checkOut) return; // No hacer nada si faltan fechas\r\n        const formattedCheckIn = checkIn.toISOString().split(\"T\")[0];\r\n        const formattedCheckOut = checkOut.toISOString().split(\"T\")[0];\r\n        console.log(\"Rango de fechas seleccionado:\", { checkIn: formattedCheckIn, checkOut: formattedCheckOut }); // Depuración\r\n\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/api/reservations/check-availability\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({\r\n                    checkIn: formattedCheckIn,\r\n                    checkOut: formattedCheckOut,\r\n                }),\r\n            });\r\n\r\n            const data = await response.json();\r\n            console.log(\"Respuesta del backend:\", data); // Depuración\r\n\r\n            // Procesar datos para actualizar disponibilidad\r\n            const updatedAvailability = roomsData.reduce((acc, room) => {\r\n                acc[room.id] = !data.unavailableRooms?.includes(room.id); // Disponible si no está en unavailableRooms\r\n                return acc;\r\n            }, {});\r\n\r\n            console.log(\"Disponibilidad actualizada:\", updatedAvailability); // Depuración\r\n            setAvailability(updatedAvailability); // Actualizar estado global de disponibilidad\r\n        } catch (error) {\r\n            console.error(\"Error al verificar disponibilidad:\", error);\r\n        }\r\n    };\r\n\r\n    // Llamar a fetchAvailability cuando cambian las fechas seleccionadas\r\n    useEffect(() => {\r\n        if (checkIn && checkOut) {\r\n            fetchAvailability();\r\n        }\r\n    }, [checkIn, checkOut]);\r\n\r\n    return (\r\n        <div className=\"home-container\" style={{ padding: \"20px\" }}>\r\n            <h1 style={{ textAlign: \"center\" }}>Bienvenido al Hostal</h1>\r\n\r\n            {/* Calendarios para seleccionar rango de fechas */}\r\n            <div style={{ margin: \"20px 0\", textAlign: \"center\" }}>\r\n                <label style={{ display: \"block\", marginBottom: \"10px\" }}>\r\n                    Selecciona tu rango de fechas:\r\n                </label>\r\n                <div style={{ display: \"flex\", justifyContent: \"center\", gap: \"10px\" }}>\r\n                    {/* Fecha de ingreso */}\r\n                    <DatePicker\r\n                        selected={checkIn}\r\n                        onChange={(date) => {\r\n                            setCheckIn(date);\r\n                            if (checkOut && date >= checkOut) {\r\n                                setCheckOut(null); // Resetear fecha de salida si es inválida\r\n                            }\r\n                        }}\r\n                        locale=\"es\"\r\n                        placeholderText=\"Fecha de ingreso\"\r\n                        minDate={new Date()}\r\n                        dateFormat=\"dd/MM/yyyy\"\r\n                        className=\"datepicker-input\"\r\n                    />\r\n\r\n                    {/* Fecha de salida */}\r\n                    <DatePicker\r\n                        selected={checkOut}\r\n                        onChange={(date) => setCheckOut(date)}\r\n                        locale=\"es\"\r\n                        placeholderText=\"Fecha de salida\"\r\n                        minDate={checkIn ? new Date(checkIn.getTime() + 24 * 60 * 60 * 1000) : new Date()}\r\n                        dateFormat=\"dd/MM/yyyy\"\r\n                        className=\"datepicker-input\"\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {/* Lista de habitaciones */}\r\n            <RoomList rooms={roomsData} availability={availability} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}