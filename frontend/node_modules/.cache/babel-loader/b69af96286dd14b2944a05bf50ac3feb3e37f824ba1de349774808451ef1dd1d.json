{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonathan\\\\Desktop\\\\Proyecto Hostal\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport RoomList from '../components/RoomList';\nimport roomsData from '../data/roomsData';\nimport DatePicker, { registerLocale } from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport es from 'date-fns/locale/es';\nimport '../styles/Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nregisterLocale(\"es\", es);\nconst Home = () => {\n  _s();\n  const [checkIn, setCheckIn] = useState(null); // Fecha de ingreso\n  const [checkOut, setCheckOut] = useState(null); // Fecha de salida\n  const [availability, setAvailability] = useState({}); // Disponibilidad de habitaciones\n\n  // Función para verificar disponibilidad en el backend\n  const fetchAvailability = async () => {\n    if (!checkIn || !checkOut) return; // No hacer nada si faltan fechas\n    const formattedCheckIn = checkIn.toISOString().split(\"T\")[0];\n    const formattedCheckOut = checkOut.toISOString().split(\"T\")[0];\n    try {\n      const response = await fetch(\"http://localhost:5000/api/reservations/check-availability\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          checkIn: formattedCheckIn,\n          checkOut: formattedCheckOut\n        })\n      });\n      const data = await response.json();\n      const updatedAvailability = roomsData.reduce((acc, room) => {\n        var _data$unavailableRoom;\n        acc[room.id] = !((_data$unavailableRoom = data.unavailableRooms) !== null && _data$unavailableRoom !== void 0 && _data$unavailableRoom.includes(room.id));\n        return acc;\n      }, {});\n      setAvailability(updatedAvailability);\n    } catch (error) {\n      console.error(\"Error al verificar disponibilidad:\", error);\n    }\n  };\n  useEffect(() => {\n    if (checkIn && checkOut) {\n      fetchAvailability();\n    }\n  }, [checkIn, checkOut]);\n\n  // Función para manejar la selección de fecha de ingreso\n  const handleCheckInChange = date => {\n    setCheckIn(date);\n\n    // Actualizar automáticamente la fecha de salida respetando la lógica de restricción\n    const nextDay = new Date(date.getTime() + 24 * 60 * 60 * 1000); // Sumar un día\n    if (!checkOut || nextDay > checkOut) {\n      setCheckOut(nextDay); // Asignar automáticamente la nueva fecha de salida\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"home-title\",\n      children: \"Bienvenido al Hostal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Selecciona tu rango de fechas:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"datepicker-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: checkIn,\n          onChange: handleCheckInChange // Llama a la función que sincroniza las fechas\n          ,\n          locale: \"es\",\n          placeholderText: \"Fecha de ingreso\",\n          minDate: new Date(),\n          dateFormat: \"dd/MM/yyyy\",\n          className: \"datepicker-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), false && /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: checkOut,\n          onChange: date => setCheckOut(date),\n          locale: \"es\",\n          placeholderText: \"Fecha de salida\",\n          minDate: checkIn ? new Date(checkIn.getTime() + 24 * 60 * 60 * 1000) : new Date(),\n          dateFormat: \"dd/MM/yyyy\",\n          className: \"datepicker-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RoomList, {\n      rooms: roomsData,\n      availability: availability\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"funNNTljUQ2G4+4sUUuJI3Se0VQ=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","RoomList","roomsData","DatePicker","registerLocale","es","jsxDEV","_jsxDEV","Home","_s","checkIn","setCheckIn","checkOut","setCheckOut","availability","setAvailability","fetchAvailability","formattedCheckIn","toISOString","split","formattedCheckOut","response","fetch","method","headers","body","JSON","stringify","data","json","updatedAvailability","reduce","acc","room","_data$unavailableRoom","id","unavailableRooms","includes","error","console","handleCheckInChange","date","nextDay","Date","getTime","className","children","fileName","_jsxFileName","lineNumber","columnNumber","selected","onChange","locale","placeholderText","minDate","dateFormat","rooms","_c","$RefreshReg$"],"sources":["C:/Users/Jonathan/Desktop/Proyecto Hostal/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport RoomList from '../components/RoomList';\r\nimport roomsData from '../data/roomsData';\r\nimport DatePicker, { registerLocale } from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport es from 'date-fns/locale/es';\r\nimport '../styles/Home.css';\r\n\r\nregisterLocale(\"es\", es);\r\n\r\nconst Home = () => {\r\n    const [checkIn, setCheckIn] = useState(null); // Fecha de ingreso\r\n    const [checkOut, setCheckOut] = useState(null); // Fecha de salida\r\n    const [availability, setAvailability] = useState({}); // Disponibilidad de habitaciones\r\n\r\n    // Función para verificar disponibilidad en el backend\r\n    const fetchAvailability = async () => {\r\n        if (!checkIn || !checkOut) return; // No hacer nada si faltan fechas\r\n        const formattedCheckIn = checkIn.toISOString().split(\"T\")[0];\r\n        const formattedCheckOut = checkOut.toISOString().split(\"T\")[0];\r\n\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/api/reservations/check-availability\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({\r\n                    checkIn: formattedCheckIn,\r\n                    checkOut: formattedCheckOut,\r\n                }),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            const updatedAvailability = roomsData.reduce((acc, room) => {\r\n                acc[room.id] = !data.unavailableRooms?.includes(room.id);\r\n                return acc;\r\n            }, {});\r\n\r\n            setAvailability(updatedAvailability);\r\n        } catch (error) {\r\n            console.error(\"Error al verificar disponibilidad:\", error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (checkIn && checkOut) {\r\n            fetchAvailability();\r\n        }\r\n    }, [checkIn, checkOut]);\r\n\r\n    // Función para manejar la selección de fecha de ingreso\r\n    const handleCheckInChange = (date) => {\r\n        setCheckIn(date);\r\n\r\n        // Actualizar automáticamente la fecha de salida respetando la lógica de restricción\r\n        const nextDay = new Date(date.getTime() + 24 * 60 * 60 * 1000); // Sumar un día\r\n        if (!checkOut || nextDay > checkOut) {\r\n            setCheckOut(nextDay); // Asignar automáticamente la nueva fecha de salida\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"home-container\">\r\n            <h1 className=\"home-title\">Bienvenido al Hostal</h1>\r\n\r\n            {/* Calendarios para seleccionar rango de fechas */}\r\n            <div className=\"calendar-container\">\r\n                <label>Selecciona tu rango de fechas:</label>\r\n                <div className=\"datepicker-wrapper\">\r\n                    {/* Fecha de ingreso */}\r\n                    <DatePicker\r\n                        selected={checkIn}\r\n                        onChange={handleCheckInChange} // Llama a la función que sincroniza las fechas\r\n                        locale=\"es\"\r\n                        placeholderText=\"Fecha de ingreso\"\r\n                        minDate={new Date()}\r\n                        dateFormat=\"dd/MM/yyyy\"\r\n                        className=\"datepicker-input\"\r\n                    />\r\n\r\n                    {/* Ocultar el calendario de fecha de salida */}\r\n                    {false && (\r\n                        <DatePicker\r\n                            selected={checkOut}\r\n                            onChange={(date) => setCheckOut(date)}\r\n                            locale=\"es\"\r\n                            placeholderText=\"Fecha de salida\"\r\n                            minDate={checkIn ? new Date(checkIn.getTime() + 24 * 60 * 60 * 1000) : new Date()}\r\n                            dateFormat=\"dd/MM/yyyy\"\r\n                            className=\"datepicker-input\"\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Lista de habitaciones */}\r\n            <RoomList rooms={roomsData} availability={availability} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}